name: Docker Image CI

on:
  workflow_run:
    workflows: ['Release'] # Make sure this matches your Release workflow name exactly
    types:
      - completed
    branches:
      - master

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }} # Use the same commit as the Release workflow

      - name: Check if this is a release
        id: check_release
        run: |
          echo "Workflow run event:"
          echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Workflow name: ${{ github.event.workflow_run.name }}"
          echo "Commit SHA: ${{ github.event.workflow_run.head_sha }}"

          echo "Current commit: $(git rev-parse HEAD)"
          echo "Available tags:"
          git tag -l --sort=-version:refname | head -10
          echo "Tags pointing to current commit:"
          git tag --points-at HEAD
          echo "Latest tag:"
          git describe --tags --abbrev=0 2>/dev/null || echo "No tags found"

          if git describe --exact-match --tags HEAD 2>/dev/null; then
            echo "is_release=true" >> $GITHUB_OUTPUT
            echo "‚úÖ This is a release commit"
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
            echo "‚ùå This is not a release commit"
          fi

      - name: Log in to GitHub Container Registry
        if: steps.check_release.outputs.is_release == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.check_release.outputs.is_release == 'true'
        run: |
          TAG=$(git describe --tags --exact-match HEAD)
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/yerlem-web"

          echo "Building Docker image with tag: ${TAG}"
          docker build . --file Dockerfile --tag ${IMAGE_NAME}:${TAG}
          docker build . --file Dockerfile --tag ${IMAGE_NAME}:latest

          echo "Pushing Docker images..."
          docker push ${IMAGE_NAME}:${TAG}
          docker push ${IMAGE_NAME}:latest

          echo "‚úÖ Docker images pushed successfully"
          echo "üì¶ Image available at: ${IMAGE_NAME}:${TAG}"
          echo "üì¶ Latest image at: ${IMAGE_NAME}:latest"
